import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as r,a as e,b as a,d as t,r as i}from"./app.9e12ad75.js";const l={},c=e("h2",{id:"基础概念与常识",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#基础概念与常识","aria-hidden":"true"},"#"),a(" 基础概念与常识")],-1),d={id:"java-语言有哪些特点",tabindex:"-1"},h=e("a",{class:"header-anchor",href:"#java-语言有哪些特点","aria-hidden":"true"},"#",-1),_={href:"https://javaguide.cn/java/basis/java-basic-questions-01.html#java-%E8%AF%AD%E8%A8%80%E6%9C%89%E5%93%AA%E4%BA%9B%E7%89%B9%E7%82%B9",target:"_blank",rel:"noopener noreferrer"},u=e("ol",null,[e("li",null,"简单易学；"),e("li",null,"面向对象（封装，继承，多态）；"),e("li",null,"平台无关性（ Java 虚拟机实现平台无关性）；"),e("li",null,"支持多线程（ C++ 语言没有内置的多线程机制，因此必须调用操作系统的多线程功能来进行多线程程序设计，而 Java 语言却提供了多线程支持）；"),e("li",null,"可靠性；"),e("li",null,"安全性；"),e("li",null,"支持网络编程并且很方便（ Java 语言诞生本身就是为简化网络编程设计的，因此 Java 语言不仅支持网络编程而且很方便）；"),e("li",null,"编译与解释并存；")],-1),v={href:"https://github.com/Snailclimb/JavaGuide/issues/544",target:"_blank",rel:"noopener noreferrer"},p=e("code",null,"std::thread",-1),m=e("code",null,"std::async",-1),J={href:"http://www.cplusplus.com/reference/thread/thread/?kw=thread",target:"_blank",rel:"noopener noreferrer"},f=e("p",null,"🌈 拓展一下：",-1),j=e("p",null,"“Write Once, Run Anywhere（一次编写，随处运行）”这句宣传口号，真心经典，流传了好多年！以至于，直到今天，依然有很多人觉得跨平台是 Java 语言最大的优势。实际上，跨平台已经不是 Java 最大的卖点了，各种 JDK 新特性也不是。目前市面上虚拟化技术已经非常成熟，比如你通过 Docker 就很容易实现跨平台了。在我看来，Java 强大的生态才是！",-1),w={id:"jvm-vs-jdk-vs-jre",tabindex:"-1"},g=e("a",{class:"header-anchor",href:"#jvm-vs-jdk-vs-jre","aria-hidden":"true"},"#",-1),b={href:"https://javaguide.cn/java/basis/java-basic-questions-01.html#jvm-vs-jdk-vs-jre",target:"_blank",rel:"noopener noreferrer"},k={id:"jvm",tabindex:"-1"},V=e("a",{class:"header-anchor",href:"#jvm","aria-hidden":"true"},"#",-1),M={href:"https://javaguide.cn/java/basis/java-basic-questions-01.html#jvm",target:"_blank",rel:"noopener noreferrer"},x=e("p",null,"Java 虚拟机（JVM）是运行 Java 字节码的虚拟机。JVM 有针对不同系统的特定实现（Windows，Linux，macOS），目的是使用相同的字节码，它们都会给出相同的结果。字节码和不同系统的 JVM 实现是 Java 语言“一次编译，随处可以运行”的关键所在。",-1),E=e("p",null,[e("strong",null,"JVM 并不是只有一种！只要满足 JVM 规范，每个公司、组织或者个人都可以开发自己的专属 JVM。"),a(" 也就是说我们平时接触到的 HotSpot VM 仅仅是是 JVM 规范的一种实现而已。")],-1),A={href:"https://en.wikipedia.org/wiki/Comparison_of_Java_virtual_machines",target:"_blank",rel:"noopener noreferrer"},B={href:"https://docs.oracle.com/javase/specs/index.html",target:"_blank",rel:"noopener noreferrer"},C=e("p",null,[e("img",{src:"http://qiniu.zhangyang.xyz/picgo/202210302311998.jpeg",alt:"img",loading:"lazy"})],-1);function S(q,y){const n=i("ExternalLinkIcon");return s(),r("div",null,[c,e("h3",d,[h,a(),e("a",_,[a("#"),t(n)]),a("Java 语言有哪些特点?")]),u,e("blockquote",null,[e("p",null,[e("strong",null,[a("🐛 修正（参见： "),e("a",v,[a("issue#544open in new window"),t(n)]),a("）")]),a(" ：C++11 开始（2011 年的时候）,C++就引入了多线程库，在 windows、linux、macos 都可以使用"),p,a("和"),m,a("来创建线程。参考链接："),e("a",J,[a("http://www.cplusplus.com/reference/thread/thread/?kw=thread"),t(n)])])]),f,j,e("h3",w,[g,a(),e("a",b,[a("#"),t(n)]),a("JVM vs JDK vs JRE")]),e("h4",k,[V,a(),e("a",M,[a("#"),t(n)]),a("JVM")]),x,E,e("p",null,[a("除了我们平时最常用的 HotSpot VM 外，还有 J9 VM、Zing VM、JRockit VM 等 JVM 。维基百科上就有常见 JVM 的对比："),e("a",A,[a("Comparison of Java virtual machinesopen in new window"),t(n)]),a(" ，感兴趣的可以去看看。并且，你可以在 "),e("a",B,[a("Java SE Specificationsopen in new window"),t(n)]),a(" 上找到各个版本的 JDK 对应的 JVM 规范。")]),C])}const K=o(l,[["render",S],["__file","index.html.vue"]]);export{K as default};
